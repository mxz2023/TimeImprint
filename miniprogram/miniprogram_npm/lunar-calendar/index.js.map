{"version":3,"sources":["LunarCalendar.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["/**\r\n * 农历（阴历）万年历\r\n * LunarCalendar\r\n * vervison : v0.1.4\r\n * Github : https://github.com/zzyss86/LunarCalendar\r\n * HomePage : http://www.tuijs.com/\r\n * Author : JasonZhou\r\n * Email : zzyss86@qq.com\r\n */\r\n\r\n(function(){\r\n\tvar extend = function(o, c){\r\n\t\tif(o && c && typeof c == \"object\"){\r\n\t\t\tfor(var p in c){\r\n\t\t\t\to[p] = c[p];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn o;\r\n\t};\r\n\t\r\n\tvar creatLenArr = function(year,month,len,start){\r\n\t\tvar arr = [];\r\n\t\t\tstart = start || 0;\r\n\t\tif(len<1)return arr;\r\n\t\tvar k = start;\r\n\t\tfor(var i=0;i<len;i++){\r\n\t\t\tarr.push({year:year,month:month,day:k});\r\n\t\t\tk++;\r\n\t\t}\r\n\t\treturn arr;\r\n\t};\r\n\t\r\n\tvar errorCode = { //错误码列表\r\n\t\t100 : '输入的年份超过了可查询范围，仅支持1891至2100年',\r\n\t\t101 : '参数输入错误，请查阅文档'\r\n\t};\r\n\t\r\n\tvar cache = null; //某年相同计算进行cache，以加速计算速度\r\n\tvar cacheUtil = { //cache管理工具\r\n\t\tcurrent : '',\r\n\t\tsetCurrent : function(year){\r\n\t\t\tif(this.current != year){\r\n\t\t\t\tthis.current = year;\r\n\t\t\t\tthis.clear();\r\n\t\t\t}\r\n\t\t},\r\n\t\tset : function(key,value){\r\n\t\t\tif(!cache) cache = {};\r\n\t\t\tcache[key] = value;\r\n\t\t\treturn cache[key];\r\n\t\t},\r\n\t\tget : function(key){\r\n\t\t\tif(!cache) cache = {};\r\n\t\t\treturn cache[key];\r\n\t\t},\r\n\t\tclear : function(){\r\n\t\t\tcache = null;\r\n\t\t}\r\n\t};\r\n\t\r\n\tvar formateDayD4 = function(month,day){\r\n\t\tmonth = month+1;\r\n\t\tmonth = month<10 ? '0'+month : month;\r\n\t\tday = day<10 ? '0'+day : day;\r\n\t\treturn 'd'+month+day;\r\n\t};\r\n\t\r\n\tvar minYear = 1890;//最小年限\r\n\tvar maxYear = 2100;//最大年限\r\n\tvar DATA = {\r\n\t\theavenlyStems: ['甲', '乙', '丙', '丁', '戊', '己', '庚', '辛', '壬', '癸'], //天干\r\n\t\tearthlyBranches: ['子', '丑', '寅', '卯', '辰', '巳', '午', '未', '申', '酉', '戌', '亥'], //地支\r\n\t\tzodiac: ['鼠','牛','虎','兔','龙','蛇','马','羊','猴','鸡','狗','猪'], //对应地支十二生肖\r\n\t\tsolarTerm: ['小寒', '大寒', '立春', '雨水', '惊蛰', '春分', '清明', '谷雨', '立夏', '小满', '芒种', '夏至', '小暑', '大暑', '立秋', '处暑', '白露', '秋分', '寒露', '霜降', '立冬', '小雪', '大雪','冬至'], //二十四节气\r\n\t\tmonthCn: ['正', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二'],\r\n\t\tdateCn: ['初一', '初二', '初三', '初四', '初五', '初六', '初七', '初八', '初九', '初十', '十一', '十二', '十三', '十四', '十五', '十六', '十七', '十八', '十九', '二十', '廿一', '廿二', '廿三', '廿四', '廿五', '廿六', '廿七', '廿八', '廿九', '三十', '卅一']\r\n\t};\r\n\t\r\n\t//中国节日放假安排，外部设置，0无特殊安排，1工作，2放假\r\n\tvar worktime = {};\r\n\t//默认设置2013-2014年放假安排\r\n\tworktime.y2013 = {\"d0101\":2,\"d0102\":2,\"d0103\":2,\"d0105\":1,\"d0106\":1,\"d0209\":2,\"d0210\":2,\"d0211\":2,\"d0212\":2,\"d0213\":2,\"d0214\":2,\"d0215\":2,\"d0216\":1,\"d0217\":1,\"d0404\":2,\"d0405\":2,\"d0406\":2,\"d0407\":1,\"d0427\":1,\"d0428\":1,\"d0429\":2,\"d0430\":2,\"d0501\":2,\"d0608\":1,\"d0609\":1,\"d0610\":2,\"d0611\":2,\"d0612\":2,\"d0919\":2,\"d0920\":2,\"d0921\":2,\"d0922\":1,\"d0929\":1,\"d1001\":2,\"d1002\":2,\"d1003\":2,\"d1004\":2,\"d1005\":2,\"d1006\":2,\"d1007\":2,\"d1012\":1};\r\n\tworktime.y2014 = {\"d0101\":2,\"d0126\":1,\"d0131\":2,\"d0201\":2,\"d0202\":2,\"d0203\":2,\"d0204\":2,\"d0205\":2,\"d0206\":2,\"d0208\":1,\"d0405\":2,\"d0407\":2,\"d0501\":2,\"d0502\":2,\"d0503\":2,\"d0504\":1,\"d0602\":2,\"d0908\":2,\"d0928\":1,\"d1001\":2,\"d1002\":2,\"d1003\":2,\"d1004\":2,\"d1005\":2,\"d1006\":2,\"d1007\":2,\"d1011\":1};\r\n\t\r\n\t//公历节日\r\n\tvar solarFestival = {\r\n\t\t'd0101':'元旦节',\r\n\t\t'd0202':'世界湿地日',\r\n\t\t'd0210':'国际气象节',\r\n\t\t'd0214':'情人节',\r\n\t\t'd0301':'国际海豹日',\r\n\t\t'd0303':'全国爱耳日',\r\n\t\t'd0305':'学雷锋纪念日',\r\n\t\t'd0308':'妇女节',\r\n\t\t'd0312':'植树节 孙中山逝世纪念日',\r\n\t\t'd0314':'国际警察日',\r\n\t\t'd0315':'消费者权益日',\r\n\t\t'd0317':'中国国医节 国际航海日',\r\n\t\t'd0321':'世界森林日 消除种族歧视国际日 世界儿歌日',\r\n\t\t'd0322':'世界水日',\r\n\t\t'd0323':'世界气象日',\r\n\t\t'd0324':'世界防治结核病日',\r\n\t\t'd0325':'全国中小学生安全教育日',\r\n\t\t'd0330':'巴勒斯坦国土日',\r\n\t\t'd0401':'愚人节 全国爱国卫生运动月(四月) 税收宣传月(四月)',\r\n\t\t'd0407':'世界卫生日',\r\n\t\t'd0422':'世界地球日',\r\n\t\t'd0423':'世界图书和版权日',\r\n\t\t'd0424':'亚非新闻工作者日',\r\n\t\t'd0501':'劳动节',\r\n\t\t'd0504':'青年节',\r\n\t\t'd0505':'碘缺乏病防治日',\r\n\t\t'd0508':'世界红十字日',\r\n\t\t'd0512':'国际护士节',\r\n\t\t'd0515':'国际家庭日',\r\n\t\t'd0517':'世界电信日',\r\n\t\t'd0518':'国际博物馆日',\r\n\t\t'd0520':'全国学生营养日',\r\n\t\t'd0522':'国际生物多样性日',\r\n\t\t'd0523':'国际牛奶日',\r\n\t\t'd0531':'世界无烟日', \r\n\t\t'd0601':'国际儿童节',\r\n\t\t'd0605':'世界环境日',\r\n\t\t'd0606':'全国爱眼日',\r\n\t\t'd0617':'防治荒漠化和干旱日',\r\n\t\t'd0623':'国际奥林匹克日',\r\n\t\t'd0625':'全国土地日',\r\n\t\t'd0626':'国际禁毒日',\r\n\t\t'd0701':'香港回归纪念日 中共诞辰 世界建筑日',\r\n\t\t'd0702':'国际体育记者日',\r\n\t\t'd0707':'抗日战争纪念日',\r\n\t\t'd0711':'世界人口日',\r\n\t\t'd0730':'非洲妇女日',\r\n\t\t'd0801':'建军节',\r\n\t\t'd0808':'中国男子节(爸爸节)',\r\n\t\t'd0815':'抗日战争胜利纪念',\r\n\t\t'd0908':'国际扫盲日 国际新闻工作者日',\r\n\t\t'd0909':'毛泽东逝世纪念',\r\n\t\t'd0910':'中国教师节', \r\n\t\t'd0914':'世界清洁地球日',\r\n\t\t'd0916':'国际臭氧层保护日',\r\n\t\t'd0918':'九一八事变纪念日',\r\n\t\t'd0920':'国际爱牙日',\r\n\t\t'd0927':'世界旅游日',\r\n\t\t'd0928':'孔子诞辰',\r\n\t\t'd1001':'国庆节 世界音乐日 国际老人节',\r\n\t\t'd1002':'国际和平与民主自由斗争日',\r\n\t\t'd1004':'世界动物日',\r\n\t\t'd1006':'老人节',\r\n\t\t'd1008':'全国高血压日 世界视觉日',\r\n\t\t'd1009':'世界邮政日 万国邮联日',\r\n\t\t'd1010':'辛亥革命纪念日 世界精神卫生日',\r\n\t\t'd1013':'世界保健日 国际教师节',\r\n\t\t'd1014':'世界标准日',\r\n\t\t'd1015':'国际盲人节(白手杖节)',\r\n\t\t'd1016':'世界粮食日',\r\n\t\t'd1017':'世界消除贫困日',\r\n\t\t'd1022':'世界传统医药日',\r\n\t\t'd1024':'联合国日 世界发展信息日',\r\n\t\t'd1031':'世界勤俭日',\r\n\t\t'd1107':'十月社会主义革命纪念日',\r\n\t\t'd1108':'中国记者日',\r\n\t\t'd1109':'全国消防安全宣传教育日',\r\n\t\t'd1110':'世界青年节',\r\n\t\t'd1111':'国际科学与和平周(本日所属的一周)',\r\n\t\t'd1112':'孙中山诞辰纪念日',\r\n\t\t'd1114':'世界糖尿病日',\r\n\t\t'd1117':'国际大学生节 世界学生节',\r\n\t\t'd1121':'世界问候日 世界电视日',\r\n\t\t'd1129':'国际声援巴勒斯坦人民国际日',\r\n\t\t'd1201':'世界艾滋病日',\r\n\t\t'd1203':'世界残疾人日',\r\n\t\t'd1205':'国际经济和社会发展志愿人员日',\r\n\t\t'd1208':'国际儿童电视日',\r\n\t\t'd1209':'世界足球日',\r\n\t\t'd1210':'世界人权日',\r\n\t\t'd1212':'西安事变纪念日',\r\n\t\t'd1213':'南京大屠杀(1937年)纪念日！紧记血泪史！',\r\n\t\t'd1220':'澳门回归纪念',\r\n\t\t'd1221':'国际篮球日',\r\n\t\t'd1224':'平安夜',\r\n\t\t'd1225':'圣诞节',\r\n\t\t'd1226':'毛泽东诞辰纪念'\r\n\t};\r\n\t\r\n\t//农历节日\r\n\tvar lunarFestival = {\r\n\t\t'd0101':'春节',\r\n\t\t'd0115':'元宵节',\r\n\t\t'd0202':'龙抬头节',\r\n\t\t'd0323':'妈祖生辰',\r\n\t\t'd0505':'端午节',\r\n\t\t'd0707':'七夕情人节',\r\n\t\t'd0715':'中元节',\r\n\t\t'd0815':'中秋节',\r\n\t\t'd0909':'重阳节',\r\n\t\t'd1015':'下元节',\r\n\t\t'd1208':'腊八节',\r\n\t\t'd1223':'小年',\r\n\t\t'd0100':'除夕'\r\n\t}\r\n\r\n\t/**\r\n\t * 1890 - 2100 年的农历数据\r\n\t * 数据格式：[0,2,9,21936]\r\n\t * [闰月所在月，0为没有闰月; *正月初一对应公历月; *正月初一对应公历日; *农历每月的天数的数组（需转换为二进制,得到每月大小，0=小月(29日),1=大月(30日)）;]\r\n\t*/\r\n\tvar lunarInfo = [[2,1,21,22184],[0,2,9,21936],[6,1,30,9656],[0,2,17,9584],[0,2,6,21168],[5,1,26,43344],[0,2,13,59728],[0,2,2,27296],[3,1,22,44368],[0,2,10,43856],[8,1,30,19304],[0,2,19,19168],[0,2,8,42352],[5,1,29,21096],[0,2,16,53856],[0,2,4,55632],[4,1,25,27304],[0,2,13,22176],[0,2,2,39632],[2,1,22,19176],[0,2,10,19168],[6,1,30,42200],[0,2,18,42192],[0,2,6,53840],[5,1,26,54568],[0,2,14,46400],[0,2,3,54944],[2,1,23,38608],[0,2,11,38320],[7,2,1,18872],[0,2,20,18800],[0,2,8,42160],[5,1,28,45656],[0,2,16,27216],[0,2,5,27968],[4,1,24,44456],[0,2,13,11104],[0,2,2,38256],[2,1,23,18808],[0,2,10,18800],[6,1,30,25776],[0,2,17,54432],[0,2,6,59984],[5,1,26,27976],[0,2,14,23248],[0,2,4,11104],[3,1,24,37744],[0,2,11,37600],[7,1,31,51560],[0,2,19,51536],[0,2,8,54432],[6,1,27,55888],[0,2,15,46416],[0,2,5,22176],[4,1,25,43736],[0,2,13,9680],[0,2,2,37584],[2,1,22,51544],[0,2,10,43344],[7,1,29,46248],[0,2,17,27808],[0,2,6,46416],[5,1,27,21928],[0,2,14,19872],[0,2,3,42416],[3,1,24,21176],[0,2,12,21168],[8,1,31,43344],[0,2,18,59728],[0,2,8,27296],[6,1,28,44368],[0,2,15,43856],[0,2,5,19296],[4,1,25,42352],[0,2,13,42352],[0,2,2,21088],[3,1,21,59696],[0,2,9,55632],[7,1,30,23208],[0,2,17,22176],[0,2,6,38608],[5,1,27,19176],[0,2,15,19152],[0,2,3,42192],[4,1,23,53864],[0,2,11,53840],[8,1,31,54568],[0,2,18,46400],[0,2,7,46752],[6,1,28,38608],[0,2,16,38320],[0,2,5,18864],[4,1,25,42168],[0,2,13,42160],[10,2,2,45656],[0,2,20,27216],[0,2,9,27968],[6,1,29,44448],[0,2,17,43872],[0,2,6,38256],[5,1,27,18808],[0,2,15,18800],[0,2,4,25776],[3,1,23,27216],[0,2,10,59984],[8,1,31,27432],[0,2,19,23232],[0,2,7,43872],[5,1,28,37736],[0,2,16,37600],[0,2,5,51552],[4,1,24,54440],[0,2,12,54432],[0,2,1,55888],[2,1,22,23208],[0,2,9,22176],[7,1,29,43736],[0,2,18,9680],[0,2,7,37584],[5,1,26,51544],[0,2,14,43344],[0,2,3,46240],[4,1,23,46416],[0,2,10,44368],[9,1,31,21928],[0,2,19,19360],[0,2,8,42416],[6,1,28,21176],[0,2,16,21168],[0,2,5,43312],[4,1,25,29864],[0,2,12,27296],[0,2,1,44368],[2,1,22,19880],[0,2,10,19296],[6,1,29,42352],[0,2,17,42208],[0,2,6,53856],[5,1,26,59696],[0,2,13,54576],[0,2,3,23200],[3,1,23,27472],[0,2,11,38608],[11,1,31,19176],[0,2,19,19152],[0,2,8,42192],[6,1,28,53848],[0,2,15,53840],[0,2,4,54560],[5,1,24,55968],[0,2,12,46496],[0,2,1,22224],[2,1,22,19160],[0,2,10,18864],[7,1,30,42168],[0,2,17,42160],[0,2,6,43600],[5,1,26,46376],[0,2,14,27936],[0,2,2,44448],[3,1,23,21936],[0,2,11,37744],[8,2,1,18808],[0,2,19,18800],[0,2,8,25776],[6,1,28,27216],[0,2,15,59984],[0,2,4,27424],[4,1,24,43872],[0,2,12,43744],[0,2,2,37600],[3,1,21,51568],[0,2,9,51552],[7,1,29,54440],[0,2,17,54432],[0,2,5,55888],[5,1,26,23208],[0,2,14,22176],[0,2,3,42704],[4,1,23,21224],[0,2,11,21200],[8,1,31,43352],[0,2,19,43344],[0,2,7,46240],[6,1,27,46416],[0,2,15,44368],[0,2,5,21920],[4,1,24,42448],[0,2,12,42416],[0,2,2,21168],[3,1,22,43320],[0,2,9,26928],[7,1,29,29336],[0,2,17,27296],[0,2,6,44368],[5,1,26,19880],[0,2,14,19296],[0,2,3,42352],[4,1,24,21104],[0,2,10,53856],[8,1,30,59696],[0,2,18,54560],[0,2,7,55968],[6,1,27,27472],[0,2,15,22224],[0,2,5,19168],[4,1,25,42216],[0,2,12,42192],[0,2,1,53584],[2,1,21,55592],[0,2,9,54560]];\r\n\t\r\n\t/**\r\n\t * 二十四节气数据，节气点时间（单位是分钟）\r\n\t * 从0小寒起算\r\n\t */\r\n\tvar termInfo = [0,21208,42467,63836,85337,107014,128867,150921,173149,195551,218072,240693,263343,285989,308563,331033,353350,375494,397447,419210,440795,462224,483532,504758];\r\n\t\r\n\t/**\r\n\t * 判断农历年闰月数\r\n\t * @param {Number} year 农历年\r\n\t * return 闰月数 （月份从1开始）\r\n\t */\r\n\tfunction getLunarLeapYear(year){\r\n\t\tvar yearData = lunarInfo[year-minYear];\r\n\t\treturn yearData[0];\r\n\t};\r\n\t\r\n\t/**\r\n\t * 获取农历年份一年的每月的天数及一年的总天数\r\n\t * @param {Number} year 农历年\r\n\t */\r\n\tfunction getLunarYearDays(year){\r\n\t\tvar yearData = lunarInfo[year-minYear];\r\n\t\tvar leapMonth = yearData[0]; //闰月\r\n\t\tvar monthData = yearData[3].toString(2);\r\n\t\tvar monthDataArr = monthData.split('');\r\n\t\t\r\n\t\t//还原数据至16位,少于16位的在前面插入0（二进制存储时前面的0被忽略）\r\n\t\tfor(var i=0;i<16-monthDataArr.length;i++){\r\n\t\t\tmonthDataArr.unshift(0);\r\n\t\t}\r\n\t\t\r\n\t\tvar len = leapMonth ? 13 : 12; //该年有几个月\r\n\t\tvar yearDays = 0;\r\n\t\tvar monthDays = [];\r\n\t\tfor(var i=0;i<len;i++){\r\n\t\t\tif(monthDataArr[i]==0){\r\n\t\t\t\tyearDays += 29;\r\n\t\t\t\tmonthDays.push(29);\r\n\t\t\t}else{\r\n\t\t\t\tyearDays += 30;\r\n\t\t\t\tmonthDays.push(30);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn {\r\n\t\t\tyearDays : yearDays,\r\n\t\t\tmonthDays : monthDays\r\n\t\t};\r\n\t};\r\n\t\r\n\t/**\r\n\t * 通过间隔天数查找农历日期\r\n\t * @param {Number} year,between 农历年，间隔天数\r\n\t */\r\n\tfunction getLunarDateByBetween(year,between){\r\n\t\tvar lunarYearDays = getLunarYearDays(year);\r\n\t\tvar end = between>0 ? between : lunarYearDays.yearDays - Math.abs(between);\r\n\t\tvar monthDays = lunarYearDays.monthDays;\r\n\t\tvar tempDays = 0;\r\n\t\tvar month = 0;\r\n\t\tfor(var i=0;i<monthDays.length;i++){\r\n\t\t\ttempDays += monthDays[i];\r\n\t\t\tif(tempDays > end){\r\n\t\t\t\tmonth = i;\r\n\t\t\t\ttempDays = tempDays-monthDays[i];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn [year,month,end - tempDays + 1];\r\n\t};\r\n\r\n\t/**\r\n\t * 根据距离正月初一的天数计算农历日期\r\n\t * @param {Number} year 公历年，月，日\r\n\t */\r\n\tfunction getLunarByBetween(year,month,day){\r\n\t\tvar yearData = lunarInfo[year-minYear];\r\n\t\tvar zenMonth = yearData[1];\r\n\t\tvar zenDay = yearData[2];\r\n\t\tvar between = getDaysBetweenSolar(year,zenMonth-1,zenDay,year,month,day);\r\n\t\tif(between==0){ //正月初一\r\n\t\t\treturn [year,0,1];\r\n\t\t}else{\r\n\t\t\tvar lunarYear = between>0 ? year : year-1;\r\n\t\t\treturn getLunarDateByBetween(lunarYear,between);\r\n\t\t}\r\n\t};\r\n\t\r\n\t/**\r\n\t * 两个公历日期之间的天数\r\n\t */\r\n\tfunction getDaysBetweenSolar(year,month,day,year1,month1,day1){\r\n\t\tvar date = new Date(year,month,day).getTime();\r\n\t\tvar date1 = new Date(year1,month1,day1).getTime();\r\n\t\treturn (date1-date) / 86400000;\r\n\t};\r\n\t\r\n\t/**\r\n\t * 计算农历日期离正月初一有多少天\r\n\t * @param {Number} year,month,day 农年，月(0-12，有闰月)，日\r\n\t */\r\n\tfunction getDaysBetweenZheng(year,month,day){\r\n\t\tvar lunarYearDays = getLunarYearDays(year);\r\n\t\tvar monthDays = lunarYearDays.monthDays;\r\n\t\tvar days = 0;\r\n\t\tfor(var i=0;i<monthDays.length;i++){\r\n\t\t\tif(i<month){\r\n\t\t\t\tdays += monthDays[i];\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn days+day-1;\r\n\t};\r\n\t\r\n\t/**\r\n\t * 某年的第n个节气为几日\r\n\t * 31556925974.7为地球公转周期，是毫秒\r\n\t * 1890年的正小寒点：01-05 16:02:31，1890年为基准点\r\n\t * @param {Number} y 公历年\r\n\t * @param {Number} n 第几个节气，从0小寒起算\r\n\t * 由于农历24节气交节时刻采用近似算法，可能存在少量误差(30分钟内)\r\n\t */\r\n\tfunction getTerm(y,n) {\r\n\t\tvar offDate = new Date( ( 31556925974.7*(y-1890) + termInfo[n]*60000  ) + Date.UTC(1890,0,5,16,2,31) );\r\n\t\treturn(offDate.getUTCDate());\r\n\t};\r\n\t\r\n\t/**\r\n\t * 获取公历年一年的二十四节气\r\n\t * 返回key:日期，value:节气中文名\r\n\t */\r\n\tfunction getYearTerm(year){\r\n\t\tvar res = {};\r\n\t\tvar month = 0;\r\n\t\tfor(var i=0;i<24;i++){\r\n\t\t\tvar day = getTerm(year,i);\r\n\t\t\tif(i%2==0)month++\r\n\t\t\tres[formateDayD4(month-1,day)] = DATA.solarTerm[i];\r\n\t\t}\r\n\t\treturn res;\r\n\t};\r\n\t\r\n\t/**\r\n\t * 获取生肖\r\n\t * @param {Number} year 干支所在年（默认以立春前的公历年作为基数）\r\n\t */\r\n\tfunction getYearZodiac(year){\r\n\t\t var num = year-1890+25; //参考干支纪年的计算，生肖对应地支\r\n\t\t return DATA.zodiac[num%12];\r\n\t};\r\n\t\r\n\t/**\r\n\t * 计算天干地支\r\n\t * @param {Number} num 60进制中的位置(把60个天干地支，当成一个60进制的数)\r\n\t */\r\n\tfunction cyclical(num) {\r\n\t\treturn(DATA.heavenlyStems[num%10]+DATA.earthlyBranches[num%12]);\r\n\t}\r\n\t\r\n\t/**\r\n\t * 获取干支纪年\r\n\t * @param {Number} year 干支所在年\r\n\t * @param {Number} offset 偏移量，默认为0，便于查询一个年跨两个干支纪年（以立春为分界线）\r\n\t */\r\n\tfunction getLunarYearName(year,offset){\r\n\t\toffset = offset || 0;\r\n\t\t//1890年1月小寒（小寒一般是1月5或6日）以前为己丑年，在60进制中排25\r\n\t\treturn cyclical(year-1890+25+offset);\r\n\t};\r\n\t\r\n\t/**\r\n\t * 获取干支纪月\r\n\t * @param {Number} year,month 公历年，干支所在月\r\n\t * @param {Number} offset 偏移量，默认为0，便于查询一个月跨两个干支纪月（有立春的2月）\r\n\t */\r\n\tfunction getLunarMonthName(year,month,offset){\r\n\t\toffset = offset || 0;\r\n\t\t//1890年1月小寒以前为丙子月，在60进制中排12\r\n\t\treturn cyclical((year-1890)*12+month+12+offset);\r\n\t};\r\n\t\r\n\t/**\r\n\t * 获取干支纪日\r\n\t * @param {Number} year,month,day 公历年，月，日\r\n\t */\r\n\tfunction getLunarDayName(year,month,day){\r\n\t\t//当日与1890/1/1 相差天数\r\n\t\t//1890/1/1与 1970/1/1 相差29219日, 1890/1/1 日柱为壬午日(60进制18)\r\n\t\tvar dayCyclical = Date.UTC(year,month,day)/86400000+29219+18;\r\n\t\treturn cyclical(dayCyclical);\r\n\t};\r\n\t\r\n\t/**\r\n\t * 获取公历月份的天数\r\n\t * @param {Number} year 公历年\r\n\t * @param {Number} month 公历月\r\n\t */\r\n\tfunction getSolarMonthDays(year,month){\r\n\t\t var monthDays = [31,isLeapYear(year)?29:28,31,30,31,30,31,31,30,31,30,31];\r\n\t\t return monthDays[month];\r\n\t};\r\n\t\r\n\t/**\r\n\t * 判断公历年是否是闰年\r\n\t * @param {Number} year 公历年\r\n\t */\r\n\tfunction isLeapYear(year){\r\n\t\treturn ((year%4==0 && year%100 !=0) || (year%400==0));\r\n\t};\r\n\t\t\r\n\t/*\r\n\t * 统一日期输入参数（输入月份从1开始，内部月份统一从0开始）\r\n\t */\r\n\tfunction formateDate(year,month,day,_minYear){\r\n\t\tvar argsLen = arguments.length;\r\n\t\tvar now = new Date();\r\n\t\tyear = argsLen ? parseInt(year,10) : now.getFullYear();\r\n\t\tmonth = argsLen ? parseInt(month-1,10) : now.getMonth();\r\n\t\tday = argsLen ? parseInt(day,10) || now.getDate() : now.getDate();\r\n\t\tif(year < (_minYear ? _minYear : minYear+1) || year > maxYear)return {error:100, msg:errorCode[100]};\r\n\t\treturn {\r\n\t\t\tyear : year,\r\n\t\t\tmonth : month,\r\n\t\t\tday : day\r\n\t\t};\r\n\t};\r\n\t\r\n\t/**\r\n\t * 将农历转换为公历\r\n\t * @param {Number} year,month,day 农历年，月(1-13，有闰月)，日\r\n\t */\r\n\tfunction lunarToSolar(_year,_month,_day){\r\n\t\tvar inputDate = formateDate(_year,_month,_day);\r\n\t\tif(inputDate.error)return inputDate;\r\n\t\tvar year = inputDate.year;\r\n\t\tvar month = inputDate.month;\r\n\t\tvar day = inputDate.day;\r\n\t\t\r\n\t\tvar between = getDaysBetweenZheng(year,month,day); //离正月初一的天数\r\n\t\tvar yearData = lunarInfo[year-minYear];\r\n\t\tvar zenMonth = yearData[1];\r\n\t\tvar zenDay = yearData[2];\r\n\t\t\r\n\t\tvar offDate = new Date(year,zenMonth-1,zenDay).getTime() + between * 86400000;\r\n\t\t\toffDate = new Date(offDate);\r\n\t\treturn {\r\n\t\t\tyear : offDate.getFullYear(),\r\n\t\t\tmonth : offDate.getMonth()+1,\r\n\t\t\tday : offDate.getDate()\r\n\t\t};\r\n\t};\r\n\t\r\n\t/**\r\n\t * 将公历转换为农历\r\n\t * @param {Number} year,month,day 公历年，月，日\r\n\t */\r\n\tfunction solarToLunar(_year,_month,_day){\r\n\t\tvar inputDate = formateDate(_year,_month,_day,minYear);\r\n\t\tif(inputDate.error)return inputDate;\r\n\t\tvar year = inputDate.year;\r\n\t\tvar month = inputDate.month;\r\n\t\tvar day = inputDate.day;\r\n\t\t\r\n\t\tcacheUtil.setCurrent(year);\r\n\t\t//立春日期\r\n\t\tvar term2 = cacheUtil.get('term2') ? cacheUtil.get('term2') : cacheUtil.set('term2',getTerm(year,2));\r\n\t\t//二十四节气\r\n\t\tvar termList = cacheUtil.get('termList') ? cacheUtil.get('termList') : cacheUtil.set('termList',getYearTerm(year));\r\n\t\t\r\n\t\tvar firstTerm = getTerm(year,month*2); //某月第一个节气开始日期\r\n\t\tvar GanZhiYear = (month>1 || month==1 && day>=term2) ? year+1 : year;//干支所在年份\r\n\t\tvar GanZhiMonth = day>=firstTerm ? month+1 : month; //干支所在月份（以节气为界）\r\n\t\t\r\n\t\tvar lunarDate = getLunarByBetween(year,month,day);\r\n\t\tvar lunarLeapMonth = getLunarLeapYear(lunarDate[0]);\r\n\t\tvar lunarMonthName = '';\r\n\t\tif(lunarLeapMonth>0 && lunarLeapMonth==lunarDate[1]){\r\n\t\t\tlunarMonthName = '闰'+DATA.monthCn[lunarDate[1]-1]+'月';\r\n\t\t}else if(lunarLeapMonth>0 && lunarDate[1]>lunarLeapMonth){\r\n\t\t\tlunarMonthName = DATA.monthCn[lunarDate[1]-1]+'月';\r\n\t\t}else{\r\n\t\t\tlunarMonthName = DATA.monthCn[lunarDate[1]]+'月';\r\n\t\t}\r\n\t\t\r\n\t\t//农历节日判断\r\n\t\tvar lunarFtv = '';\r\n\t\tvar lunarMonthDays = getLunarYearDays(lunarDate[0]).monthDays;\r\n\t\t//除夕\r\n\t\tif(lunarDate[1] == lunarMonthDays.length-1 && lunarDate[2]==lunarMonthDays[lunarMonthDays.length-1]){\r\n\t\t\tlunarFtv = lunarFestival['d0100'];\r\n\t\t}else if(lunarLeapMonth>0 && lunarDate[1]>lunarLeapMonth){\r\n\t\t\tlunarFtv = lunarFestival[formateDayD4(lunarDate[1]-1,lunarDate[2])];\r\n\t\t}else{\r\n\t\t\tlunarFtv = lunarFestival[formateDayD4(lunarDate[1],lunarDate[2])];\r\n\t\t}\r\n\t\t\r\n\t\tvar res = {\r\n\t\t\tzodiac : getYearZodiac(GanZhiYear),\r\n\t\t\tGanZhiYear : getLunarYearName(GanZhiYear),\r\n\t\t\tGanZhiMonth : getLunarMonthName(year,GanZhiMonth),\r\n\t\t\tGanZhiDay : getLunarDayName(year,month,day),\r\n\t\t\t//放假安排：0无特殊安排，1工作，2放假\r\n\t\t\tworktime : worktime['y'+year] && worktime['y'+year][formateDayD4(month,day)] ? worktime['y'+year][formateDayD4(month,day)] : 0,\r\n\t\t\tterm : termList[formateDayD4(month,day)],\r\n\t\t\t\r\n\t\t\tlunarYear : lunarDate[0],\r\n\t\t\tlunarMonth : lunarDate[1]+1,\r\n\t\t\tlunarDay : lunarDate[2],\r\n\t\t\tlunarMonthName : lunarMonthName,\r\n\t\t\tlunarDayName : DATA.dateCn[lunarDate[2]-1],\r\n\t\t\tlunarLeapMonth : lunarLeapMonth,\r\n\t\t\t\r\n\t\t\tsolarFestival : solarFestival[formateDayD4(month,day)],\r\n\t\t\tlunarFestival : lunarFtv\r\n\t\t};\r\n\r\n\t\treturn res;\r\n\t};\r\n\t\r\n\t/**\r\n\t * 获取指定公历月份的农历数据\r\n\t * return res{Object}\r\n\t * @param {Number} year,month 公历年，月\r\n\t * @param {Boolean} fill 是否用上下月数据补齐首尾空缺，首例数据从周日开始\r\n\t */\r\n\tfunction calendar(_year,_month,fill){\r\n\t\tvar inputDate = formateDate(_year,_month);\r\n\t\tif(inputDate.error)return inputDate;\r\n\t\tvar year = inputDate.year;\r\n\t\tvar month = inputDate.month;\r\n\t\t\r\n\t\tvar calendarData = solarCalendar(year,month+1,fill);\r\n\t\tfor(var i=0;i<calendarData.monthData.length;i++){\r\n\t\t\tvar cData = calendarData.monthData[i];\r\n\t\t\tvar lunarData = solarToLunar(cData.year,cData.month,cData.day);\r\n\t\t\textend(calendarData.monthData[i],lunarData);\r\n\t\t}\r\n\t\treturn calendarData;\r\n\t};\r\n\t\r\n\t/**\r\n\t * 公历某月日历\r\n\t * return res{Object}\r\n\t * @param {Number} year,month 公历年，月\r\n\t * @param {Boolean} fill 是否用上下月数据补齐首尾空缺，首例数据从周日开始 (7*6阵列)\r\n\t */\r\n\tfunction solarCalendar(_year,_month,fill){\r\n\t\tvar inputDate = formateDate(_year,_month);\r\n\t\tif(inputDate.error)return inputDate;\r\n\t\tvar year = inputDate.year;\r\n\t\tvar month = inputDate.month;\r\n\t\t\r\n\t\tvar firstDate = new Date(year,month,1);\r\n\t\tvar preMonthDays,preMonthData,nextMonthData;\r\n\t\t\r\n\t\tvar res = {\r\n\t\t\tfirstDay : firstDate.getDay(), //该月1号星期几\r\n\t\t\tmonthDays : getSolarMonthDays(year,month), //该月天数\r\n\t\t\tmonthData : []\r\n\t\t};\r\n\t\t\r\n\t\tres.monthData = creatLenArr(year,month+1,res.monthDays,1);\r\n\r\n\t\tif(fill){\r\n\t\t\tif(res.firstDay > 0){ //前补\r\n\t\t\t\tvar preYear = month-1<0 ? year-1 : year;\r\n\t\t\t\tvar preMonth = month-1<0 ? 11 : month-1;\r\n\t\t\t\tpreMonthDays = getSolarMonthDays(preYear,preMonth);\r\n\t\t\t\tpreMonthData = creatLenArr(preYear,preMonth+1,res.firstDay,preMonthDays-res.firstDay+1);\r\n\t\t\t\tres.monthData = preMonthData.concat(res.monthData);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(7*6 - res.monthData.length!=0){ //后补\r\n\t\t\t\tvar nextYear = month+1>11 ? year+1 : year;\r\n\t\t\t\tvar nextMonth = month+1>11 ? 0 : month+1;\r\n\t\t\t\tvar fillLen = 7*6 - res.monthData.length;\r\n\t\t\t\tnextMonthData = creatLenArr(nextYear,nextMonth+1,fillLen,1);\r\n\t\t\t\tres.monthData = res.monthData.concat(nextMonthData);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn res;\r\n\t};\r\n\t\r\n\t/**\r\n\t * 设置放假安排【对外暴露接口】\r\n\t * @param {Object} workData\r\n\t */\r\n\tfunction setWorktime(workData){\r\n\t\textend(worktime,workData);\r\n\t};\r\n\r\n\tvar LunarCalendar = {\r\n\t\tsolarToLunar : solarToLunar,\r\n\t\tlunarToSolar : lunarToSolar,\r\n\t\tcalendar : calendar,\r\n\t\tsolarCalendar : solarCalendar,\r\n\t\tsetWorktime : setWorktime,\r\n\t\tgetSolarMonthDays : getSolarMonthDays\r\n\t};\r\n\t\r\n\tif (typeof define === 'function'){\r\n\t\tdefine (function (){\r\n\t\t\treturn LunarCalendar;\r\n\t\t});\r\n\t}else if(typeof exports === 'object'){\r\n\t\tmodule.exports = LunarCalendar;\r\n\t}else{\r\n\t\twindow.LunarCalendar = LunarCalendar;\r\n\t};\r\n})();"]}